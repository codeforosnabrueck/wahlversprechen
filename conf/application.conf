# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "Change this key if you deploy this application! Or set environment variable APPLICATION_SECRET"
application.secret = ${?APPLICATION_SECRET}
session.secure = true

# The application languages
# ~~~~~
application.langs="de"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://database/wahlversprechendb"

db.default.user=wahlversprechen
db.default.password="password"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=INFO

application.disqus="wahlversprechen2013"
application.twitter = "wahl2013"
application.mail = "mail@wahlversprechen2013.de"
application.root_url = "wahlversprechen2013.de"

application.disqus_api_key = ${?DISQUS_API}

application.allowHTMLEntries = true

application.feeds = [
	"http://rss.sueddeutsche.de/rss/Politik",
	"http://www.welt.de/politik/deutschland/?service=Rss",
	"http://www.welt.de/wirtschaft/?service=Rss",
	"http://rss.sueddeutsche.de/rss/Wirtschaft",
	"http://newsfeed.zeit.de/politik/index",
	"http://newsfeed.zeit.de/wirtschaft/index",
	"http://newsfeed.zeit.de/gesellschaft/index",
	"http://www.faz.net/rss/aktuell/politik/",
	"http://www.faz.net/rss/aktuell/wirtschaft",
	"http://www.bundesregierung.de/SiteGlobals/Functions/RSSFeed/DE/RSSNewsfeed/RSS_Breg_artikel/RSSNewsfeed.xml?nn=392282"
]

# application.feeds.government = [
#	"http://www.bundesregierung.de/SiteGlobals/Functions/RSSFeed/DE/RSSNewsfeed/RSS_Breg_artikel/RSSNewsfeed.xml?nn=392282",
#	"http://www.bundestag.de/blueprint/servlet/service/bt/14154/asFeed/index.rss",
#	"http://www.bundestag.de/blueprint/servlet/service/bt/273110/asFeed/index.rss"
#]

#application.feeds.laws = [
#	"http://www.gesetze-im-internet.de/gii-toc.xml"
#]

application.feed_min_score = 4.0
